version: "3"

services:
  db:
    image: postgres:alpine
    restart: unless-stopped
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - db:/var/lib/postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

    labels:
      - docker-volume-backup.stop-during-backup=true

  app:
    image: nextcloud:latest
    restart: unless-stopped
    ports:
      - ${HOST_PORT}:80
    links:
      - db
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - nextcloud:/var/www/html

    labels:
      - docker-volume-backup.stop-during-backup=true

    environment:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db

  backup:
    image: offen/docker-volume-backup:latest
    restart: unless-stopped
    env_file: ./backup.env

    environment:
      - AWS_S3_PATH=${COMPOSE_PROJECT_NAME}

    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./notifications.tmpl:/etc/dockervolumebackup/notifications.d/notifications.tmpl
      - nextcloud:/backup/nextcloud:ro
      - db:/backup/db:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /${HOME}/backups/${COMPOSE_PROJECT_NAME}:/archive

volumes:
  nextcloud:
  db:

